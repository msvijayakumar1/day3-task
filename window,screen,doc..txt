WINDOW:-
      Each browser tab has its own top-level window object.Each <iframe>(and deprecated
<frame>)element has its own window .Each object too,nested within a parent window.Each
of these windows gets its own seperte global object.window.window always refers to window,
but window.parent and window.top might refer to enclosing windows ,giving access to other
exection contexts.In addition to document and screen described below,window properties 
include,
      1)setTimeout() and setInterval() binding event handlers to a timer
      2)location giving the current URL
      3)history with methods back() and forward() giving the tab's mutable history
      4)navigator describing the browser software

DOCUMENT:-
      Each window object has a document object to be rendered.these objects get confused 
in part because HTML elements are added to the global object when assigned a unique id.
       1)window.holyCow or window["holyCow"]
       2)document.getElementById("holyCow")
       3)document.querySelector("#holyCow")
       4)document.body.firstChild
       5)document.body.children[0]

SCREEN:-
      The window object also has a screen object with properties describing the physical display:

       1)screen properties width and height are the full screen

       2)screen properties availWidth and availHeight omit the toolbar
 
       The portion of a screen displaying the rendered document is the viewport in JavaScript,
which is potentially confusing because we call an application's portion of the screen a window 
when talking about interactions with the operating system. The getBoundingClientRect() method 
of any document element will return an object with top, left, bottom, and right properties describing
the location of the element in the viewport.